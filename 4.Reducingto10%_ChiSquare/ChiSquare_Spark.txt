#This code use spark to feature selection using "mllib.feature.ChiSqSelector"

import org.apache.spark.SparkContext._
import org.apache.spark.mllib.linalg.Vectors
import org.apache.spark.mllib.regression.LabeledPoint
import org.apache.spark.mllib.util.MLUtils
import org.apache.spark.mllib.feature.ChiSqSelector


val rawData = sc.textFile("/pathtomatrix/LabMTOTAL.csv")

val data = rawData.map { line =>
val values = line.split(',').map(_.toDouble)
val featureVector = Vectors.dense(values.init)
val label = values.last
LabeledPoint(label, featureVector)
}

val selector = new ChiSqSelector(30)
val transformer = selector.fit(data)

val filteredData = data.map { lp => 
  LabeledPoint(lp.label, transformer.transform(lp.features)) 
}
filteredData.saveAsTextFile("/path/LabMTotalreduced30")

val rawDataNumLabels = sc.textFile("/path/MTNumLabels.csv")

val NumlLabeldata = rawDataNumLabels.map { line =>
val values = line.split(',').map(_.toDouble)
val nlabel = Vectors.dense(values)
(nlabel)
}

val filteredLabels = NumlLabeldata.map { lp => transformer.transform(lp)}

filteredLabels.saveAsTextFile("/path/MTotalfeaturesFiltered30")
